server:
  port: 8080

spring:
  application:
    name: order-service

  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://47.101.186.136:3306/cloud_order?useSSL=false
    username: root
    password: 123456

mybatis:
  type-aliases-package: com.example.entity
  configuration:
    map-underscore-to-camel-case: true

logging:
  level:
    cn.itcast: debug
  pattern:
    dateformat: MM-dd HH:mm:ss:SSS

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka/
    # 是否需要进行服务注册
    register-with-eureka: true
    # 是否需要进行服务拉取
    fetch-registry: true

# 给指定名称的微服务配置负载均衡策略。即：Ribbon 调用该微服务进行负载时，会使用如下指定的策略
user-service:
  ribbon:
    # 指定 Ribbon 负载均衡策略
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

# Ribbon 默认是采用懒加载，即第一次访问时才会去创建 LoadBalanceClient，请求时间会很长。
ribbon:
  # 开启饥饿加载：饥饿加载则会在项目启动时创建，降低第一次访问的耗时，通过下面配置开启饥饿加载
  eager-load:
    enabled: true
    clients:
      # 多个的话，使用 - 接着往下加即可
      - user-service